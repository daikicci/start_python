# Задание 3.
# Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел. Проверить
# работу исключения на реальном примере. Запрашивать у пользователя данные и заполнять список необходимо только
# числами. Класс-исключение должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу
# скрипта, введя, например, команду «stop». При этом скрипт завершается, сформированный список с числами выводится на
# экран.
# Подсказка: для этого задания примем, что пользователь может вводить только числа и строки. Во время ввода
# пользователем очередного элемента необходимо реализовать проверку типа элемента. Вносить его в список, только если
# введено число. Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее
# сообщение. При этом работа скрипта не должна завершаться.

class OwnError(Exception):
    def __init__(self, txt):
        self.txt = txt


user_list = []
user_input = ''
while user_input != 'stop':
    try:
        user_input = input('Введите целое положительное число: ')
        if user_input.isdigit():
            user_list.append(int(user_input))
        elif user_input != 'stop':
            raise OwnError('Вы ввели не то!')
    except OwnError as err:
        print(err)
        continue
else:
    print(user_list)
